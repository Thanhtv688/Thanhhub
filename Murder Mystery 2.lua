-- T·∫£i th∆∞ vi·ªán Fluent UI
local Fluent = loadstring(game:HttpGet("https://raw.githubusercontent.com/LuaCrack/Library/78b99523c0413609a998e34bc3dda1328f25f63e/LibraryFluent.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

-- Ki·ªÉm tra ID map
if game.PlaceId ~= 142823291 then
    game.Players.LocalPlayer:Kick("‚ö† Script kh√¥ng ho·∫°t ƒë·ªông cho map n√†y!")
    return
end

local Executor = identifyexecutor and identifyexecutor() or "Unknown"
local BlacklistedExecutors = { "Solara", "Ronix", "Ghost", "Unknown" }

for _, exec in pairs(BlacklistedExecutors) do
    if Executor == exec then
        game.Players.LocalPlayer:Kick("‚ö† Executor kh√¥ng ƒë∆∞·ª£c h·ªó tr·ª£!")
        return
    end
end

Fluent:Notify({
    Title = "Thanh Hub",
    Content = "ƒêang t·∫£i..",
    Duration = 5
})

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")

-- T·∫£i danh s√°ch ban t·ª´ URL
local BanData
local success, response = pcall(function()
    return game:HttpGet("https://raw.githubusercontent.com/Chubedan3/TH/refs/heads/main/Ban", true)
end)

if success and response then
    BanData = loadstring(response)() or { BanVinhVien = {}, BanTamThoi = {} }
else
    BanData = { BanVinhVien = {}, BanTamThoi = {} }
end

-- Ki·ªÉm tra n·∫øu ng∆∞·ªùi ch∆°i b·ªã ban
local function KiemTraBan()
    local UserID = LocalPlayer.UserId
    for _, ID in ipairs(BanData.BanVinhVien) do
        if UserID == ID then
            LocalPlayer:Kick("üö´ B·∫°n ƒë√£ b·ªã ban vƒ©nh vi·ªÖn kh·ªèi Thanh Hub!")
            return true
        end
    end
    if BanData.BanTamThoi[UserID] and os.time() < BanData.BanTamThoi[UserID] then
        LocalPlayer:Kick("‚è≥ B·∫°n b·ªã ban t·∫°m th·ªùi trong 1 ng√†y! H√£y th·ª≠ l·∫°i sau.")
        return true
    elseif BanData.BanTamThoi[UserID] then
        BanData.BanTamThoi[UserID] = nil
    end
    return false
end

if KiemTraBan() then return end

-- G·ª≠i Webhook (ch·ªâ ch·∫°y m·ªôt l·∫ßn)
local WebhookURL = game:HttpGet("https://drive.google.com/uc?export=download&id=1wwR25jdkdz8iswuP0PV5Wis_BRX_-MhP")
local function sendWebhook()
    local httpRequest = http and http.request or syn and syn.request or request
    if httpRequest then
        local data = {
            ["username"] = "Thanh Hub Webhook",
            ["embeds"] = {{
                ["title"] = "üîç Ki·ªÉm tra ng∆∞·ªùi ch∆°i (t·ª´ Murder Mystery 2)",
                ["description"] = "**T√™n ng∆∞·ªùi ch∆°i:** " .. LocalPlayer.Name ..  
                                 "\n**ID:** " .. LocalPlayer.UserId ..  
                                 "\n**Executor:** " .. Executor,
                ["color"] = 16776960,
                ["thumbnail"] = { ["url"] = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. LocalPlayer.UserId .. "&width=420&height=420&format=png" }
            }}
        }
        pcall(function()
            httpRequest({
                Url = WebhookURL,
                Method = "POST",
                Headers = { ["Content-Type"] = "application/json" },
                Body = HttpService:JSONEncode(data)
            })
        end)
    end
end
spawn(sendWebhook)

-- Kh·ªüi t·∫°o GUI v·ªõi Fluent UI (Theme m·∫∑c ƒë·ªãnh: Rose)
local Window = Fluent:CreateWindow({
    Title = "Thanh Hub | Murder Mystery 2 | v0.3",
    SubTitle = "",
    TabWidth = 160,
    Size = UDim2.fromOffset(450, 300),
    Acrylic = false,
    Theme = "Rose",
    MinimizeKey = Enum.KeyCode.LeftControl
})
Fluent:SetTheme("Rose")

local Tabs = {
    CapNhat = Window:AddTab({ Title = "üÜï C·∫≠p Nh·∫≠t", Icon = "refresh" }),
    Chinh = Window:AddTab({ Title = "üè† Ch√≠nh", Icon = "home" }),
    HienThi = Window:AddTab({ Title = "üëÅ Hi·ªÉn Th·ªã", Icon = "eye" }),
    NguoiChoi = Window:AddTab({ Title = "üßë Ng∆∞·ªùi Ch∆°i", Icon = "user" }),
    DichChuyen = Window:AddTab({ Title = "üó∫ D·ªãch Chuy·ªÉn", Icon = "map" }),
    ChienDau = Window:AddTab({ Title = "‚öî Chi·∫øn ƒê·∫•u", Icon = "sword" }),
    CaiDat = Window:AddTab({ Title = "‚öô C√†i ƒê·∫∑t", Icon = "settings" }),
    HoTro = Window:AddTab({ Title = "üì© H·ªó Tr·ª£", Icon = "help-circle" })
}

local Options = Fluent.Options

-- Tab C·∫≠p Nh·∫≠t
Tabs.CapNhat:AddParagraph({
    Title = "üìú C·∫≠p Nh·∫≠t M·ªõi 13/4/2025 - v0.3",
    Content = "üîπ Update v0.3: Th√™m n√∫t b·∫•m b·∫≠t/t·∫Øt GUI, Fix l·ªói hi·ªÉn th·ªã highlight vai tr√≤.\nüîπ Ch·ª©c nƒÉng m·ªõi\n + Gi·∫øt t·∫•t c·∫£ (khi l√†m Murder).\n + Speed glitch (khi v·ª´a ch·∫°y v·ª´a nh·∫£y s·∫Ω tƒÉng t·ªëc theo m·ª©c ƒëi·ªÅu ch·ªânh).\n + üìõ ESP Vai Tr√≤ B·∫±ng T√™n Ng∆∞·ªùi Ch∆°i"
})

-- Tab Ch√≠nh
Tabs.Chinh:AddButton({
    Title = "üìú M·ªü Infinite Yield",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
    end
})

-- Tab Hi·ªÉn Th·ªã
local VaiTroSection = Tabs.HienThi:AddSection("üö∂ Vai Tr√≤")
local roles = {}
local runningHighlight = false
local highlightConnection

-- ESP T√™n Ng∆∞·ªùi Ch∆°i
local runningNameESP = false
local nameESPConnections = {}
local defaultHighlightColor = Color3.fromRGB(128, 128, 128) -- M√†u x√°m m·∫∑c ƒë·ªãnh

-- H√†m t·∫°o BillboardGui hi·ªÉn th·ªã t√™n
local function CreateNameESP(player)
    if player ~= LocalPlayer and player.Character and not player.Character:FindFirstChild("NameESP") then
        local head = player.Character:FindFirstChild("Head")
        if head then
            local billboard = Instance.new("BillboardGui")
            billboard.Name = "NameESP"
            billboard.Adornee = head
            billboard.Size = UDim2.new(0, 100, 0, 30)
            billboard.StudsOffset = Vector3.new(0, 2, 0)
            billboard.AlwaysOnTop = true
            billboard.Parent = head

            local nameLabel = Instance.new("TextLabel")
            nameLabel.Size = UDim2.new(1, 0, 1, 0)
            nameLabel.BackgroundTransparency = 1
            nameLabel.Text = player.Name
            nameLabel.TextColor3 = defaultHighlightColor
            nameLabel.TextSize = 14
            nameLabel.Font = Enum.Font.SourceSansBold
            nameLabel.Parent = billboard
        end
    end
end

-- H√†m x√≥a t·∫•t c·∫£ BillboardGui
local function RemoveNameESP()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local head = player.Character:FindFirstChild("Head")
            if head then
                local billboard = head:FindFirstChild("NameESP")
                if billboard then
                    billboard:Destroy()
                end
            end
        end
    end
end

-- H√†m c·∫≠p nh·∫≠t m√†u t√™n li√™n t·ª•c
local function UpdateNameESP()
    local success, roleData = pcall(function()
        return ReplicatedStorage:FindFirstChild("GetPlayerData", true):InvokeServer()
    end)
    if not success or not roleData then
        -- N·∫øu kh√¥ng l·∫•y ƒë∆∞·ª£c d·ªØ li·ªáu, ƒë·∫∑t m√†u x√°m
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
                local billboard = player.Character.Head:FindFirstChild("NameESP")
                if billboard then
                    billboard.TextLabel.TextColor3 = defaultHighlightColor
                end
            end
        end
        return
    end

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
            -- T·∫°o NameESP n·∫øu ch∆∞a c√≥
            if not player.Character.Head:FindFirstChild("NameESP") and runningNameESP then
                CreateNameESP(player)
            end
            -- C·∫≠p nh·∫≠t m√†u theo vai tr√≤
            local billboard = player.Character.Head:FindFirstChild("NameESP")
            if billboard then
                local playerRole = roleData[player.Name] and roleData[player.Name].Role
                billboard.TextLabel.TextColor3 = playerRole == "Murderer" and Color3.fromRGB(255, 0, 0) or
                                                playerRole == "Sheriff" and Color3.fromRGB(0, 0, 255) or
                                                playerRole == "Hero" and Color3.fromRGB(255, 250, 0) or
                                                playerRole == "Innocent" and Color3.fromRGB(0, 255, 0) or
                                                defaultHighlightColor
            end
        end
    end
end

-- Toggle ESP Vai Tr√≤ B·∫±ng T√™n
VaiTroSection:AddToggle("NameESPToggle", {
    Title = "üìõ ESP Vai Tr√≤ B·∫±ng T√™n Ng∆∞·ªùi Ch∆°i",
    Default = false,
    Callback = function(state)
        runningNameESP = state
        if state then
            -- T·∫°o NameESP cho t·∫•t c·∫£ ng∆∞·ªùi ch∆°i hi·ªán t·∫°i
            for _, player in pairs(Players:GetPlayers()) do
                CreateNameESP(player)
            end
            -- C·∫≠p nh·∫≠t li√™n t·ª•c m·ªói frame
            nameESPConnections.main = RunService.Heartbeat:Connect(function()
                if runningNameESP then
                    pcall(UpdateNameESP)
                end
            end)
            -- Theo d√µi ng∆∞·ªùi ch∆°i m·ªõi v√† h·ªìi sinh
            nameESPConnections.playerAdded = Players.PlayerAdded:Connect(function(player)
                if runningNameESP then
                    player.CharacterAdded:Connect(function()
                        task.wait(0.1) -- ƒê·ª£i nh√¢n v·∫≠t t·∫£i
                        CreateNameESP(player)
                    end)
                end
            end)
        else
            -- Ng·∫Øt k·∫øt n·ªëi v√† x√≥a NameESP
            for _, connection in pairs(nameESPConnections) do
                connection:Disconnect()
            end
            nameESPConnections = {}
            RemoveNameESP()
        end
    end
})

-- H√†m t·∫°o Highlight
local function CreateHighlight(player)
    if player ~= LocalPlayer then
        -- X√≥a Highlight c≈© n·∫øu c√≥
        if player.Character and player.Character:FindFirstChild("RoleHighlight") then
            player.Character.RoleHighlight:Destroy()
        end
        -- T·∫°o Highlight m·ªõi
        if player.Character then
            local highlight = Instance.new("Highlight", player.Character)
            highlight.Name = "RoleHighlight"
            highlight.FillTransparency = 0.5
            highlight.OutlineTransparency = 0
            highlight.FillColor = defaultHighlightColor
        end
        -- Theo d√µi h·ªìi sinh
        player.CharacterAdded:Connect(function(character)
            task.wait(0.1) -- ƒê·ª£i nh√¢n v·∫≠t t·∫£i
            if runningHighlight then
                local highlight = Instance.new("Highlight", character)
                highlight.Name = "RoleHighlight"
                highlight.FillTransparency = 0.5
                highlight.OutlineTransparency = 0
                highlight.FillColor = defaultHighlightColor
            end
        end)
    end
end

-- H√†m c·∫≠p nh·∫≠t Highlight li√™n t·ª•c
local function UpdateHighlights()
    local success, roleData = pcall(function()
        return ReplicatedStorage:FindFirstChild("GetPlayerData", true):InvokeServer()
    end)
    if not success or not roleData then 
        -- N·∫øu kh√¥ng l·∫•y ƒë∆∞·ª£c d·ªØ li·ªáu, ƒë·∫∑t m√†u x√°m
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("RoleHighlight") then
                player.Character.RoleHighlight.FillColor = defaultHighlightColor
            end
        end
        return 
    end
    roles = roleData

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            -- T·∫°o Highlight n·∫øu ch∆∞a c√≥
            if not player.Character:FindFirstChild("RoleHighlight") and runningHighlight then
                local highlight = Instance.new("Highlight", player.Character)
                highlight.Name = "RoleHighlight"
                highlight.FillTransparency = 0.5
                highlight.OutlineTransparency = 0
                highlight.FillColor = defaultHighlightColor
            end
            -- C·∫≠p nh·∫≠t m√†u theo vai tr√≤
            if player.Character:FindFirstChild("RoleHighlight") then
                local highlight = player.Character.RoleHighlight
                local playerRole = roles[player.Name] and roles[player.Name].Role
                highlight.FillColor = playerRole == "Murderer" and Color3.fromRGB(255, 0, 0) or
                                      playerRole == "Sheriff" and Color3.fromRGB(0, 0, 255) or
                                      playerRole == "Hero" and Color3.fromRGB(255, 250, 0) or
                                      playerRole == "Innocent" and Color3.fromRGB(0, 255, 0) or
                                      defaultHighlightColor
            end
        end
    end
end

-- Toggle Highlight Vai Tr√≤
VaiTroSection:AddToggle("HighlightVaiTro", {
    Title = "üîç Hi·ªÉn Th·ªã Highlight Vai Tr√≤",
    Default = false,
    Callback = function(state)
        runningHighlight = state
        if state then
            -- T·∫°o Highlight cho t·∫•t c·∫£ ng∆∞·ªùi ch∆°i hi·ªán t·∫°i
            for _, player in pairs(Players:GetPlayers()) do
                CreateHighlight(player)
            end
            -- C·∫≠p nh·∫≠t li√™n t·ª•c m·ªói frame
            highlightConnection = RunService.Heartbeat:Connect(function()
                if runningHighlight then
                    pcall(UpdateHighlights)
                end
            end)
            -- Theo d√µi ng∆∞·ªùi ch∆°i m·ªõi
            Players.PlayerAdded:Connect(function(player)
                if runningHighlight then
                    CreateHighlight(player)
                end
            end)
        else
            -- Ng·∫Øt k·∫øt n·ªëi v√† x√≥a Highlight
            if highlightConnection then 
                highlightConnection:Disconnect() 
                highlightConnection = nil 
            end
            for _, player in pairs(Players:GetPlayers()) do
                if player.Character and player.Character:FindFirstChild("RoleHighlight") then
                    player.Character.RoleHighlight:Destroy()
                end
            end
        end
    end
})

local runningRole = false
local roleLabel = Instance.new("TextLabel", Instance.new("ScreenGui", game.CoreGui))
roleLabel.Size = UDim2.new(0, 250, 0, 60)
roleLabel.Position = UDim2.new(0.5, -125, 0.4, 0)
roleLabel.Font = Enum.Font.SourceSansBold
roleLabel.TextSize = 36
roleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
roleLabel.BackgroundTransparency = 1
roleLabel.Visible = false
local roleConnection

local function updateRoleDisplay()
    local success, roleData = pcall(function()
        return ReplicatedStorage:FindFirstChild("GetPlayerData", true):InvokeServer()
    end)
    if success and roleData and roleData[LocalPlayer.Name] then
        local newRole = roleData[LocalPlayer.Name].Role
        if newRole and newRole ~= roleLabel.Text then
            roleLabel.Text = newRole
            roleLabel.TextColor3 = newRole == "Murderer" and Color3.fromRGB(255, 0, 0) or 
                                   newRole == "Sheriff" and Color3.fromRGB(0, 0, 255) or 
                                   newRole == "Hero" and Color3.fromRGB(255, 215, 0) or 
                                   Color3.fromRGB(0, 255, 0)
            roleLabel.Visible = true
            task.delay(5, function() if runningRole then roleLabel.Visible = false end end)
        end
    end
end

VaiTroSection:AddToggle("HienThiVaiTro", {
    Title = "üëÄ Hi·ªÉn Th·ªã Vai Tr√≤ C·ªßa M√¨nh",
    Default = false,
    Callback = function(state)
        runningRole = state
        if state then
            roleConnection = RunService.RenderStepped:Connect(function()
                if runningRole then
                    task.spawn(function()
                        task.wait(1) -- C·∫≠p nh·∫≠t m·ªói 1 gi√¢y ƒë·ªÉ gi·∫£m t·∫£i
                        pcall(updateRoleDisplay)
                    end)
                end
            end)
        else
            if roleConnection then roleConnection:Disconnect() end
            roleLabel.Visible = false
        end
    end
})

local VanChoiSection = Tabs.HienThi:AddSection("üéÆ V√°n Ch∆°i")
local runningRoundTimer = false
local timerText = Instance.new("TextLabel", Instance.new("ScreenGui", game.CoreGui))
timerText.BackgroundTransparency = 1
timerText.TextColor3 = Color3.fromRGB(255, 255, 255)
timerText.TextScaled = true
timerText.AnchorPoint = Vector2.new(0.5, 0.5)
timerText.Position = UDim2.fromScale(0.5, 0.15)
timerText.Size = UDim2.fromOffset(180, 40)
timerText.Font = Enum.Font.SourceSansBold
timerText.TextSize = 24
timerText.Visible = false
local timerConnection

local function secondsToMinutes(seconds)
    if not seconds or seconds < 0 then return "N/A" end
    return string.format("%dm %ds", math.floor(seconds / 60), seconds % 60)
end

local function showRoundTimer()
    local success, timeLeft = pcall(function()
        return ReplicatedStorage.Remotes.Extras.GetTimer:InvokeServer()
    end)
    timerText.Text = success and secondsToMinutes(timeLeft) or "N/A"
    timerText.Visible = runningRoundTimer
end

VanChoiSection:AddToggle("HienThiThoiGian", {
    Title = "‚è≥ Hi·ªÉn Th·ªã Th·ªùi Gian V√≤ng ƒê·∫•u",
    Default = false,
    Callback = function(state)
        runningRoundTimer = state
        if state then
            timerConnection = RunService.RenderStepped:Connect(function()
                if runningRoundTimer then
                    task.spawn(function()
                        task.wait(1) -- C·∫≠p nh·∫≠t m·ªói 1 gi√¢y
                        pcall(showRoundTimer)
                    end)
                end
            end)
        else
            if timerConnection then timerConnection:Disconnect() end
            timerText.Visible = false
        end
    end
})

local runningGunESP = false
local autoGetDroppedGun = false
local gunESPConnection

local function showGunESP(gun)
    local gunesp = Instance.new("Highlight", gun)
    gunesp.OutlineTransparency = 1
    gunesp.FillColor = Color3.fromRGB(255, 255, 0)
    gunesp.Name = "GunESP"
    gunesp.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    gunesp.Adornee = gun
    local bguiclone = Instance.new("BillboardGui", gun)
    bguiclone.Size = UDim2.new(0, 100, 0, 50)
    bguiclone.StudsOffset = Vector3.new(0, 2, 0)
    bguiclone.AlwaysOnTop = true
    bguiclone.Name = "DGBGUIClone"
    local label = Instance.new("TextLabel", bguiclone)
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(255, 255, 0)
    label.TextScaled = true
    label.Text = "S√∫ng R∆°i!"
end

VanChoiSection:AddToggle("HienThiSungRoi", {
    Title = "üî´ Hi·ªÉn Th·ªã S√∫ng R∆°i",
    Default = false,
    Callback = function(state)
        runningGunESP = state
        if state then
            gunESPConnection = Workspace.DescendantAdded:Connect(function(ch)
                if runningGunESP and ch.Name == "GunDrop" then
                    showGunESP(ch)
                    if autoGetDroppedGun and LocalPlayer.Character then
                        task.spawn(function()
                            task.wait(1)
                            if ch and ch:IsDescendantOf(Workspace) then
                                local prevPos = LocalPlayer.Character:GetPivot()
                                LocalPlayer.Character:MoveTo(ch.Position)
                                LocalPlayer.Backpack.ChildAdded:Wait()
                                LocalPlayer.Character:PivotTo(prevPos)
                            end
                        end)
                    end
                end
            end)
        else
            if gunESPConnection then gunESPConnection:Disconnect() end
        end
    end
})

VanChoiSection:AddToggle("TuDongLaySung", {
    Title = "üöÄ T·ª± ƒë·ªông l·∫•y s√∫ng r∆°i",
    Default = false,
    Callback = function(state)
        autoGetDroppedGun = state
    end
})

-- Tab Ng∆∞·ªùi Ch∆°i
Tabs.NguoiChoi:AddSlider("Walkspeed", {
    Title = "üèÉ‚Äç‚ôÇÔ∏è T·ªëc ƒê·ªô Di Chuy·ªÉn",
    Default = 16,
    Min = 16,
    Max = 300,
    Rounding = 1,
    Callback = function(value)
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.WalkSpeed = value
        end
        getgenv().Walkspeed = value
    end
})

Tabs.NguoiChoi:AddSlider("Jumppower", {
    Title = "ü¶ò ƒê·ªô Cao Nh·∫£y",
    Default = 50,
    Min = 50,
    Max = 300,
    Rounding = 1,
    Callback = function(value)
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.JumpPower = value
        end
        getgenv().Jumppower = value
    end
})

-- Tab D·ªãch Chuy·ªÉn
local MM2Section = Tabs.DichChuyen:AddSection("üé≠ Murder Mystery 2")
MM2Section:AddButton({
    Title = "üî™ Teleport ƒë·∫øn Murder",
    Callback = function()
        for _, player in pairs(Players:GetPlayers()) do
            if player.Character and (player.Backpack:FindFirstChild("Knife") or player.Character:FindFirstChild("Knife")) then
                LocalPlayer.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame
                return
            end
        end
        Fluent:Notify({ Title = "‚ö† Kh√¥ng T√¨m Th·∫•y", Content = "Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi c√≥ dao!", Duration = 3 })
    end
})

MM2Section:AddButton({
    Title = "üî´ Teleport ƒê·∫øn Sheriff",
    Callback = function()
        for _, player in pairs(Players:GetPlayers()) do
            if player.Character and (player.Backpack:FindFirstChild("Gun") or player.Character:FindFirstChild("Gun")) then
                LocalPlayer.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame
                return
            end
        end
        Fluent:Notify({ Title = "‚ö† Kh√¥ng T√¨m Th·∫•y", Content = "Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi c√≥ s√∫ng!", Duration = 3 })
    end
})

local FMM2Section = Tabs.DichChuyen:AddSection("üí≤ Farm Murder Mystery 2")
FMM2Section:AddButton({
    Title = "üí∞ T·ª± ƒê·ªông Nh·∫∑t Xu",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Chubedan3/TH/refs/heads/main/Eotufem"))()
    end
})

local DanhSachNguoiChoi = {}
local function CapNhatDanhSachNguoiChoi()
    DanhSachNguoiChoi = {}
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            table.insert(DanhSachNguoiChoi, player.Name)
        end
    end
end
CapNhatDanhSachNguoiChoi()

local DropdownTeleport = Tabs.DichChuyen:AddDropdown("TeleportNguoiChoi", {
    Title = "‚úà Ch·ªçn ng∆∞·ªùi ch∆°i ƒë·ªÉ Teleport",
    Values = DanhSachNguoiChoi,
    Multi = false,
    Default = "",
    Callback = function(value)
        getgenv().NguoiChoiDaChon = value
    end
})

Tabs.DichChuyen:AddButton({
    Title = "üîç Ki·ªÉm tra l·∫°i ng∆∞·ªùi ch∆°i",
    Callback = function()
        CapNhatDanhSachNguoiChoi()
        DropdownTeleport:SetValues(DanhSachNguoiChoi)
    end
})

Tabs.DichChuyen:AddButton({
    Title = "üöÄ Teleport ƒë·∫øn ng∆∞·ªùi ch∆°i",
    Callback = function()
        local TargetPlayer = Players:FindFirstChild(getgenv().NguoiChoiDaChon)
        if TargetPlayer and TargetPlayer.Character and TargetPlayer.Character:FindFirstChild("HumanoidRootPart") then
            LocalPlayer.Character.HumanoidRootPart.CFrame = TargetPlayer.Character.HumanoidRootPart.CFrame
        else
            Fluent:Notify({ Title = "‚ö† L·ªói", Content = "Kh√¥ng th·ªÉ t√¨m th·∫•y ng∆∞·ªùi ch∆°i!", Duration = 3 })
        end
    end
})

-- Tab Chi·∫øn ƒê·∫•u
-- Th√™m v√†o Tab Chi·∫øn ƒê·∫•u ho·∫∑c Tab Ti·ªán √çch c·ªßa Thanh Hub
local ChienDauSection = Tabs.ChienDau:AddSection("üéØ TƒÉng T·ªëc (Speed Glitch)") -- C√≥ th·ªÉ ƒë·ªïi sang tab kh√°c n·∫øu mu·ªën

-- Bi·∫øn to√†n c·ª•c
local defaultSpeed = 16 -- T·ªëc ƒë·ªô m·∫∑c ƒë·ªãnh trong MM2
local glitchSpeed = 50 -- T·ªëc ƒë·ªô m·∫∑c ƒë·ªãnh khi b·∫≠t glitch
local isGlitchEnabled = false
local speedConnection = nil

-- H√†m ki·ªÉm tra tr·∫°ng th√°i di chuy·ªÉn v√† nh·∫£y
local function isMovingAndJumping()
    local character = game.Players.LocalPlayer.Character
    if not character or not character:FindFirstChild("Humanoid") then return false end
    local humanoid = character.Humanoid
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    if not rootPart then return false end

    -- Ki·ªÉm tra nh·∫£y (JumpState) v√† di chuy·ªÉn (Velocity l·ªõn h∆°n ng∆∞·ª°ng nh·ªè)
    local isJumping = humanoid:GetState() == Enum.HumanoidStateType.Jumping or humanoid:GetState() == Enum.HumanoidStateType.Freefall
    local isMoving = rootPart.Velocity.Magnitude > 1 -- Ng∆∞·ª°ng ƒë·ªÉ x√°c ƒë·ªãnh di chuy·ªÉn
    return isJumping and isMoving
end

-- H√†m c·∫≠p nh·∫≠t t·ªëc ƒë·ªô
local function updateSpeed()
    local character = game.Players.LocalPlayer.Character
    if not character or not character:FindFirstChild("Humanoid") then return end
    local humanoid = character.Humanoid

    if isGlitchEnabled and isMovingAndJumping() then
        humanoid.WalkSpeed = glitchSpeed
    else
        humanoid.WalkSpeed = defaultSpeed
    end
end

-- √î nh·∫≠p t·ªëc ƒë·ªô
ChienDauSection:AddInput("GlitchSpeedInput", {
    Title = "T·ªëc ƒê·ªô Glitch",
    Default = tostring(glitchSpeed),
    Placeholder = "Nh·∫≠p t·ªëc ƒë·ªô (v√≠ d·ª•: 50)",
    Numeric = true, -- Ch·ªâ cho ph√©p s·ªë
    Callback = function(value)
        local newSpeed = tonumber(value)
        if newSpeed and newSpeed > 0 then
            glitchSpeed = newSpeed
            Fluent:Notify({ Title = "ƒê√£ C·∫≠p Nh·∫≠t", Content = "T·ªëc ƒë·ªô glitch ƒë·∫∑t th√†nh: " .. glitchSpeed, Duration = 3 })
        else
            Fluent:Notify({ Title = "L·ªói", Content = "Vui l√≤ng nh·∫≠p s·ªë h·ª£p l·ªá!", Duration = 5 })
        end
    end
})

-- Toggle b·∫≠t/t·∫Øt Auto Speed Glitch
ChienDauSection:AddToggle("AutoSpeedGlitchToggle", {
    Title = "B·∫≠t Auto Speed Glitch",
    Default = false,
    Callback = function(state)
        isGlitchEnabled = state
        if state then
            -- B·∫≠t v√≤ng l·∫∑p ki·ªÉm tra t·ªëc ƒë·ªô
            speedConnection = game:GetService("RunService").Heartbeat:Connect(updateSpeed)
            Fluent:Notify({ Title = "ƒê√£ B·∫≠t", Content = "Auto Speed Glitch ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t!", Duration = 3 })
        else
            -- T·∫Øt v√≤ng l·∫∑p v√† kh√¥i ph·ª•c t·ªëc ƒë·ªô m·∫∑c ƒë·ªãnh
            if speedConnection then
                speedConnection:Disconnect()
                speedConnection = nil
            end
            local character = game.Players.LocalPlayer.Character
            if character and character:FindFirstChild("Humanoid") then
                character.Humanoid.WalkSpeed = defaultSpeed
            end
            Fluent:Notify({ Title = "ƒê√£ T·∫Øt", Content = "Auto Speed Glitch ƒë√£ ƒë∆∞·ª£c t·∫Øt!", Duration = 3 })
        end
    end
})

-- ƒê·∫£m b·∫£o t·ªëc ƒë·ªô ƒë∆∞·ª£c kh√¥i ph·ª•c khi nh√¢n v·∫≠t respawn
game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
    if not isGlitchEnabled then return end
    task.wait(1) -- ƒê·ª£i nh√¢n v·∫≠t t·∫£i xong
    local humanoid = character:WaitForChild("Humanoid")
    humanoid.WalkSpeed = defaultSpeed -- ƒê·∫∑t l·∫°i t·ªëc ƒë·ªô m·∫∑c ƒë·ªãnh ban ƒë·∫ßu
    if speedConnection then
        speedConnection:Disconnect()
        speedConnection = game:GetService("RunService").Heartbeat:Connect(updateSpeed)
    end
end)

-- D·ªãch v·ª• v√† bi·∫øn to√†n c·ª•c
local Players = game:GetService("Players")
local VirtualInputManager = game:GetService("VirtualInputManager")
local LocalPlayer = Players.LocalPlayer

-- H√†m Kill All
local function KillAll()
    if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        Fluent:Notify({
            Title = "L·ªói",
            Content = "Nh√¢n v·∫≠t c·ªßa b·∫°n ch∆∞a t·∫£i!",
            Duration = 3
        })
        return
    end

    local knife = LocalPlayer.Backpack:FindFirstChild("Knife")
    if knife then
        knife.Parent = LocalPlayer.Character
    else
        Fluent:Notify({
            Title = "C·∫£nh b√°o",
            Content = "Kh√¥ng t√¨m th·∫•y dao trong ba l√¥!",
            Duration = 3
        })
    end

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            LocalPlayer.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame
            VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, false, 0)
            task.wait(0.1)
            VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, false, 0)
            task.wait(0.5)
        end
    end

    Fluent:Notify({
        Title = "Th√†nh c√¥ng",
        Content = "ƒê√£ th·ª±c thi Kill All!",
        Duration = 3
    })
end

local MurderSection = Tabs.ChienDau:AddSection("üî™ Murder")
-- Th√™m n√∫t "Kill All" v√†o tab Main
MurderSection:AddButton({
    Title = "Gi·∫øt T·∫•t C·∫£",
    Description = "Gi·∫øt t·∫•t c·∫£ ng∆∞·ªùi ch∆°i kh√°c b·∫±ng dao",
    Callback = function()
        KillAll()
    end
})

local ChienDauSection = Tabs.ChienDau:AddSection("üéØ Chi·∫øn ƒê·∫•u")
ChienDauSection:AddParagraph({
    Title = "üéØ T·ªâ l·ªá b·∫Øn d√≠nh Murder (theo ping)",
    Content = "Ping 40-60: 100%\nPing 80-90: 93%\nPing 100-170: 86%\nPing 200-400: 67%\nPing 500-700: 34%\nPing 1000-2000: 1%"
})

local shootButton = Instance.new("TextButton", Instance.new("ScreenGui", game.CoreGui))
shootButton.Size = UDim2.new(0, 200, 0, 50)
shootButton.Position = UDim2.new(0.5, -100, 0.5, 0)
shootButton.Text = "B·∫Øn Murderer"
shootButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
shootButton.TextColor3 = Color3.fromRGB(255, 255, 255)
shootButton.Font = Enum.Font.SourceSansBold
shootButton.TextSize = 20
shootButton.Visible = false
shootButton.Active = true

local dragging, dragInput, dragStart, startPos
shootButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = shootButton.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then dragging = false end
        end)
    end
end)

shootButton.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UIS.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        local newPos = UDim2.new(0, startPos.X.Offset + delta.X, 0, startPos.Y.Offset + delta.Y)
        local screenSize = Workspace.CurrentCamera.ViewportSize
        shootButton.Position = UDim2.new(
            0, math.clamp(newPos.X.Offset, 0, screenSize.X - shootButton.AbsoluteSize.X),
            0, math.clamp(newPos.Y.Offset, 0, screenSize.Y - shootButton.AbsoluteSize.Y)
        )
    end
end)

local function equipGun()
    local character = LocalPlayer.Character
    local backpack = LocalPlayer:FindFirstChild("Backpack")
    local gun = character:FindFirstChild("Gun") or (backpack and backpack:FindFirstChild("Gun"))
    if gun and not character:FindFirstChild("Gun") then
        gun.Parent = character
        task.wait(0.2)
    end
    return character:FindFirstChild("Gun")
end

local function findMurderer()
    local roles = ReplicatedStorage:FindFirstChild("GetPlayerData", true):InvokeServer()
    for playerName, data in pairs(roles or {}) do
        if data.Role == "Murderer" and not data.Killed and not data.Dead then
            return Players:FindFirstChild(playerName)
        end
    end
end

local function shootTarget(target)
    local hrp = target.Character and target.Character:FindFirstChild("HumanoidRootPart")
    if hrp and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Gun") then
        LocalPlayer.Character.Gun.KnifeLocal.CreateBeam.RemoteFunction:InvokeServer(1, hrp.Position + Vector3.new(0, 3, 0), "AH2")
    end
end

shootButton.MouseButton1Click:Connect(function()
    if not equipGun() then
        Fluent:Notify({ Title = "L·ªói", Content = "B·∫°n kh√¥ng c√≥ s√∫ng!", Duration = 5 })
        return
    end
    local murderer = findMurderer()
    if murderer then shootTarget(murderer)
    else Fluent:Notify({ Title = "L·ªói", Content = "Kh√¥ng t√¨m th·∫•y Murderer!", Duration = 5 }) end
end)

ChienDauSection:AddToggle("HienThiNutBan", {
    Title = "üéØ Hi·ªÉn Th·ªã N√∫t B·∫Øn Murderer",
    Default = false,
    Callback = function(state)
        shootButton.Visible = state
    end
})

-- Tab C√†i ƒê·∫∑t
local CaiDatSection = Tabs.CaiDat:AddSection("‚öô C√†i ƒê·∫∑t")
CaiDatSection:AddButton({
    Title = "üîÑ T·∫£i L·∫°i M√°y Ch·ªß",
    Callback = function()
        game:GetService("TeleportService"):Teleport(game.PlaceId, LocalPlayer)
    end
})

-- Tab H·ªó Tr·ª£
local HoTroSection = Tabs.HoTro:AddSection("üì© H·ªó Tr·ª£")
HoTroSection:AddParagraph({
    Title = "H·ªó Tr·ª£",
    Content = "Nh·∫≠p y√™u c·∫ßu, tr√°nh spam ho·∫∑c n·ªôi dung kh√¥ng ph√π h·ª£p ƒë·ªÉ kh√¥ng b·ªã ban."
})

local NoiDungYeuCau = ""
HoTroSection:AddInput("YeuCauInput", {
    Title = "üìú Nh·∫≠p y√™u c·∫ßu",
    Placeholder = "Nh·∫≠p n·ªôi dung...",
    Callback = function(value)
        NoiDungYeuCau = value
    end
})

local DemSoLanGui = {}
local ThoiGianHienTai = os.date("*t")
local function KiemTraGioiHan()
    local ID = LocalPlayer.UserId
    if not DemSoLanGui[ID] then DemSoLanGui[ID] = { SoLan = 0, Ngay = ThoiGianHienTai.day } end
    if DemSoLanGui[ID].Ngay ~= ThoiGianHienTai.day then
        DemSoLanGui[ID] = { SoLan = 0, Ngay = ThoiGianHienTai.day }
    end
    if DemSoLanGui[ID].SoLan >= 60 then return false end
    DemSoLanGui[ID].SoLan += 1
    return true
end

HoTroSection:AddButton({
    Title = "üì® G·ª≠i Y√™u C·∫ßu",
    Callback = function()
        if not KiemTraGioiHan() then
            Fluent:Notify({ Title = "‚õî B·ªã C·∫•m", Content = "Qu√° 60 y√™u c·∫ßu/ng√†y!", Duration = 5 })
            return
        end
        if NoiDungYeuCau == "" then
            Fluent:Notify({ Title = "‚ö† L·ªói", Content = "Ch∆∞a nh·∫≠p n·ªôi dung!", Duration = 3 })
            return
        end
        local WebhookURL = game:HttpGet("https://drive.google.com/uc?export=download&id=1wwDQluZHISyNgRUtBbxLjjFxcmHwprZS")
        local data = {
            ["username"] = "Thanh Hub Webhook",
            ["embeds"] = {{
                ["title"] = "üì© Y√™u C·∫ßu M·ªõi T·ª´: " .. LocalPlayer.Name .. " (ID: " .. LocalPlayer.UserId .. ")",
                ["description"] = NoiDungYeuCau,
                ["color"] = 16711680,
                ["thumbnail"] = { ["url"] = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. LocalPlayer.UserId .. "&width=420&height=420&format=png" }
            }}
        }
        pcall(function()
            (http and http.request or syn and syn.request or request)({
                Url = WebhookURL,
                Method = "POST",
                Headers = { ["Content-Type"] = "application/json" },
                Body = HttpService:JSONEncode(data)
            })
        end)
        NoiDungYeuCau = ""
        Options.YeuCauInput:SetValue("")
    end
})

-- C·∫•u h√¨nh SaveManager v√† InterfaceManager
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:SetIgnoreIndexes({})
SaveManager:SetFolder("ThanhHubConfig")
InterfaceManager:SetFolder("ThanhHubConfig")
SaveManager:IgnoreThemeSettings()
InterfaceManager:BuildInterfaceSection(Tabs.CaiDat)

local Players = game:GetService("Players")
local ContentProvider = game:GetService("ContentProvider")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local guiName = "CustomScreenGui"

-- L∆∞u v·ªã tr√≠ cu·ªëi c√πng
local savedPosition = UDim2.new(0.300, -96, 0.300, -72) -- V·ªã tr√≠ m·∫∑c ƒë·ªãnh ban ƒë·∫ßu

local function createGUI()
    -- Xo√° GUI c≈© n·∫øu c√≤n
    local old = playerGui:FindFirstChild(guiName)
    if old then old:Destroy() end

    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = guiName
    ScreenGui.ResetOnSpawn = false
    ScreenGui.Parent = playerGui

    local Button = Instance.new("ImageButton")
    Button.Name = "CustomButton"
    Button.Parent = ScreenGui
    Button.Size = UDim2.new(0, 50, 0, 50)
    Button.Position = savedPosition
    Button.BackgroundTransparency = 1
    Button.Image = "rbxassetid://17764595132"

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(1, 0)
    UICorner.Parent = Button

    -- D√π ·∫£nh c√≥ l·ªói hay kh√¥ng, kh√¥ng l√†m m·∫•t n√∫t
    pcall(function()
        ContentProvider:PreloadAsync({Button.Image})
    end)

    -- K√©o n√∫t
    local dragging, dragInput, dragStart, startPos
    Button.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = Button.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    Button.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            local newPos = UDim2.new(
                startPos.X.Scale, startPos.X.Offset + delta.X,
                startPos.Y.Scale, startPos.Y.Offset + delta.Y
            )
            Button.Position = newPos
            savedPosition = newPos -- C·∫≠p nh·∫≠t v·ªã tr√≠ m·ªõi nh·∫•t
        end
    end)

    -- Click
    Button.MouseButton1Click:Connect(function()
        local vim = game:GetService("VirtualInputManager")
        if vim then
            task.defer(function()
                vim:SendKeyEvent(true, Enum.KeyCode.LeftControl, false, game)
                vim:SendKeyEvent(false, Enum.KeyCode.LeftControl, false, game)
            end)
        end
    end)
end

-- T·∫°o l·∫ßn ƒë·∫ßu
createGUI()

-- N·∫øu ch·∫øt th√¨ t·∫°o l·∫°i
player.CharacterAdded:Connect(function()
    task.wait(1)
    createGUI()
end)

-- Lu√¥n ki·ªÉm tra n·∫øu GUI b·ªã x√≥a ‚Üí t·∫°o l·∫°i
task.spawn(function()
    while true do
        task.wait(3)
        if not playerGui:FindFirstChild(guiName) then
            createGUI()
        end
    end
end)

-- Th√¥ng b√°o kh·ªüi ƒë·ªông
Fluent:Notify({
    Title = "‚úÖ Thanh Hub ƒê√£ S·∫µn S√†ng",
    Content = "Highlight Vai Tr√≤ ƒë√£ ƒë∆∞·ª£c s·ª≠a!",
    Duration = 3
})

Window:SelectTab(1)
SaveManager:LoadAutoloadConfig()

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
if not Rayfield then
    warn("Không thể tải Rayfield Library!")
    return
end

local Window = Rayfield:CreateWindow({
    Name = "Thanh Hub | Dead Rails | v0.1 (Beta)",
    LoadingTitle = "Dead Rails",
    LoadingSubtitle = "bởi thanhtv68",
    ConfigurationSaving = {
        Enabled = true,
        FileName = "thanhhub"
    }
})

-- Dịch vụ
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Cam = workspace.CurrentCamera
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local StarterGui = game:GetService("StarterGui")

-- Tạo các tab
local AimbotTab = Window:CreateTab("Aimbot")
local MainTab = Window:CreateTab("Chính")
local EscapeTab = Window:CreateTab("Trốn Thoát")
local ESPTab = Window:CreateTab("ESP")
local MovementTab = Window:CreateTab("Di Chuyển")

-- Biến Aimbot
local validNPCs = {}
local raycastParams = RaycastParams.new()
raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
local fovCircle = Drawing.new("Circle")
fovCircle.Visible = false
fovCircle.Thickness = 1
fovCircle.Color = Color3.new(1, 1, 1)
fovCircle.Filled = false
local fovRadius = 100
local aimbotEnabled = false
local aimbotKey = Enum.UserInputType.MouseButton2

-- Biến ESP
local ESPHandles = {}
local ESPEnabled = false
local ESPPlayerEnabled = false
local ESPZombyEnabled = false
local ESPColor = Color3.fromRGB(255, 0, 0)

-- Biến Di Chuyển
local noClipEnabled = false

-- Biến Kill Aura
local auraOn = false
local killDist = 15

-- Biến Trốn Thoát
local ownerUserId = 0
local escapeNoClipEnabled = false

-- Hàm hỗ trợ
local function sendNotification(title, text, duration)
    pcall(function()
        StarterGui:SetCore("SendNotification", {
            Title = title,
            Text = text,
            Duration = duration or 4
        })
    end)
end

local function updateFOV()
    fovCircle.Radius = fovRadius
    fovCircle.Position = Cam.ViewportSize / 2
end

local function isNPC(obj)
    return obj:IsA("Model") 
        and obj:FindFirstChild("Humanoid")
        and obj.Humanoid.Health > 0
        and obj:FindFirstChild("Head")
        and obj:FindFirstChild("HumanoidRootPart")
        and not Players:GetPlayerFromCharacter(obj)
end

local function updateNPCs()
    local tempTable = {}
    for _, obj in ipairs(workspace:GetDescendants()) do
        if isNPC(obj) then
            tempTable[obj] = true
        end
    end
    for i = #validNPCs, 1, -1 do
        if not tempTable[validNPCs[i]] then
            table.remove(validNPCs, i)
        end
    end
    for obj in pairs(tempTable) do
        if not table.find(validNPCs, obj) then
            table.insert(validNPCs, obj)
        end
    end
end

workspace.DescendantAdded:Connect(function(descendant)
    if isNPC(descendant) then
        table.insert(validNPCs, descendant)
        local humanoid = descendant:WaitForChild("Humanoid")
        humanoid.Destroying:Connect(function()
            for i = #validNPCs, 1, -1 do
                if validNPCs[i] == descendant then
                    table.remove(validNPCs, i)
                    break
                end
            end
        end)
    end
end)

workspace.DescendantRemoving:Connect(function(descendant)
    if isNPC(descendant) then
        for i = #validNPCs, 1, -1 do
            if validNPCs[i] == descendant then
                table.remove(validNPCs, i)
                break
            end
        end
    end
end)

local function predictPos(target)
    local rootPart = target:FindFirstChild("HumanoidRootPart")
    local head = target:FindFirstChild("Head")
    if not rootPart or not head then
        return head and head.Position or rootPart and rootPart.Position
    end
    local velocity = rootPart.Velocity
    local predictionTime = 0.02
    local basePosition = rootPart.Position + velocity * predictionTime
    local headOffset = head.Position - rootPart.Position
    return basePosition + headOffset
end

local function getTarget()
    local nearest = nil
    local minDistance = math.huge
    local viewportCenter = Cam.ViewportSize / 2
    raycastParams.FilterDescendantsInstances = {LocalPlayer.Character}
    for _, npc in ipairs(validNPCs) do
        local predictedPos = predictPos(npc)
        local screenPos, visible = Cam:WorldToViewportPoint(predictedPos)
        if visible and screenPos.Z > 0 then
            local distance = (Vector2.new(screenPos.X, screenPos.Y) - viewportCenter).Magnitude
            if distance <= fovRadius then
                local ray = workspace:Raycast(Cam.CFrame.Position, (predictedPos - Cam.CFrame.Position).Unit * 1000, raycastParams)
                if ray and ray.Instance:IsDescendantOf(npc) and distance < minDistance then
                    minDistance = distance
                    nearest = npc
                end
            end
        end
    end
    return nearest
end

local function aim(targetPosition)
    local currentCF = Cam.CFrame
    local targetDirection = (targetPosition - currentCF.Position).Unit
    local smoothFactor = 0.581
    local newLookVector = currentCF.LookVector:Lerp(targetDirection, smoothFactor)
    Cam.CFrame = CFrame.new(currentCF.Position, currentCF.Position + newLookVector)
end

local function CreateESP(object, color)
    if not object or not object.PrimaryPart or ESPHandles[object] then return end
    local highlight = Instance.new("Highlight")
    highlight.Name = "ESP_Highlight"
    highlight.Adornee = object
    highlight.FillColor = color
    highlight.OutlineColor = color
    highlight.Parent = object

    local billboard = Instance.new("BillboardGui")
    billboard.Name = "ESP_Billboard"
    billboard.Adornee = object.PrimaryPart
    billboard.Size = UDim2.new(0, 200, 0, 50)
    billboard.StudsOffset = Vector3.new(0, 5, 0)
    billboard.AlwaysOnTop = true
    billboard.Parent = object

    local textLabel = Instance.new("TextLabel")
    textLabel.Text = object.Name
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.TextColor3 = color
    textLabel.BackgroundTransparency = 1
    textLabel.TextSize = 7
    textLabel.Parent = billboard

    ESPHandles[object] = {Highlight = highlight, Billboard = billboard}
end

local function ClearESP()
    for obj, handles in pairs(ESPHandles) do
        if handles.Highlight then handles.Highlight:Destroy() end
        if handles.Billboard then handles.Billboard:Destroy() end
        ESPHandles[obj] = nil
    end
end

local function UpdateESP()
    ClearESP()
    local runtimeItems = workspace:FindFirstChild("RuntimeItems")
    if runtimeItems and ESPEnabled then
        for _, item in ipairs(runtimeItems:GetDescendants()) do
            if item:IsA("Model") then
                CreateESP(item, Color3.new(1, 0, 0))
            end
        end
    end
    local nightEnemies = workspace:FindFirstChild("NightEnemies")
    if nightEnemies and ESPZombyEnabled then
        for _, enemy in ipairs(nightEnemies:GetDescendants()) do
            if enemy:IsA("Model") then
                CreateESP(enemy, Color3.new(0, 0, 1))
            end
        end
    end
end

local function AddESPForPlayer(player)
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") or player == LocalPlayer then return end
    local character = player.Character
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    local humanoid = character:WaitForChild("Humanoid")
    if not character:FindFirstChild("ESPFrame") then
        local espFrame = Instance.new("BillboardGui")
        espFrame.Name = "ESPFrame"
        espFrame.Parent = character
        espFrame.Adornee = humanoidRootPart
        espFrame.Size = UDim2.new(0, 100, 0, 40)
        espFrame.StudsOffset = Vector3.new(0, 3, 0)
        espFrame.AlwaysOnTop = true

        local frame = Instance.new("Frame")
        frame.Parent = espFrame
        frame.Size = UDim2.new(1, 0, 1, 0)
        frame.BackgroundTransparency = 1

        local healthText = Instance.new("TextLabel")
        healthText.Parent = frame
        healthText.Size = UDim2.new(1, 0, 0.3, 0)
        healthText.BackgroundTransparency = 1
        healthText.TextColor3 = Color3.fromRGB(255, 255, 255)
        healthText.TextSize = 10
        healthText.Text = "Máu: " .. math.floor(humanoid.Health)
        humanoid:GetPropertyChangedSignal("Health"):Connect(function()
            healthText.Text = "Máu: " .. math.floor(humanoid.Health)
        end)
    end
end

local function AddESPForEnemy(enemy)
    if not enemy or not enemy:FindFirstChild("HumanoidRootPart") or enemy:FindFirstChild("ESPFrame") then return end
    local humanoid = enemy:FindFirstChild("Humanoid")
    if not humanoid then return end
    local espFrame = Instance.new("BillboardGui")
    espFrame.Name = "ESPFrame"
    espFrame.Parent = enemy
    espFrame.Adornee = enemy.HumanoidRootPart
    espFrame.Size = UDim2.new(0, 100, 0, 40)
    espFrame.StudsOffset = Vector3.new(0, 3, 0)
    espFrame.AlwaysOnTop = true

    local frame = Instance.new("Frame")
    frame.Parent = espFrame
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.BackgroundTransparency = 1

    local healthText = Instance.new("TextLabel")
    healthText.Parent = frame
    healthText.Size = UDim2.new(1, 0, 0.3, 0)
    healthText.BackgroundTransparency = 1
    healthText.TextColor3 = ESPColor
    healthText.TextSize = 10
    healthText.Text = "Máu: " .. math.floor(humanoid.Health)
    humanoid:GetPropertyChangedSignal("Health"):Connect(function()
        healthText.Text = "Máu: " .. math.floor(humanoid.Health)
    end)
end

local function applyNoClip()
    if LocalPlayer.Character then
        for _, part in ipairs(LocalPlayer.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = not noClipEnabled
            end
        end
    end
end

local function applyEscapeNoClip()
    if LocalPlayer.Character then
        for _, part in ipairs(LocalPlayer.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = not escapeNoClipEnabled
            end
        end
    end
end

local function getNearestNPC()
    local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not root then return end

    local nearest, minDist = nil, math.huge
    for _, npc in ipairs(workspace:GetDescendants()) do
        if isNPC(npc) then
            local hrp = npc.HumanoidRootPart
            local dist = (hrp.Position - root.Position).Magnitude
            if dist <= killDist and dist < minDist then
                nearest, minDist = npc, dist
            end
        end
    end
    return nearest
end

local function dragAndKill(npc)
    if not npc then return end
    local dragRemote = ReplicatedStorage:FindFirstChild("Shared") and ReplicatedStorage.Shared:FindFirstChild("Remotes") and ReplicatedStorage.Shared.Remotes:FindFirstChild("RequestStartDrag")
    if dragRemote then
        dragRemote:FireServer(npc)
        task.wait(0.5)
        if npc:FindFirstChild("Humanoid") and npc.Humanoid.Health > 0 then
            npc:BreakJoints()
        end
    end
end

local function killAuraLoop()
    while auraOn do
        local target = getNearestNPC()
        if target then dragAndKill(target) end
        task.wait(0.2)
    end
end

-- Vòng lặp chính
local lastUpdate = 0
local UPDATE_INTERVAL = 0.4

RunService.Heartbeat:Connect(function(dt)
    lastUpdate = lastUpdate + dt
    if lastUpdate >= UPDATE_INTERVAL then
        updateNPCs()
        lastUpdate = 0
    end
    if aimbotEnabled then
        local target = getTarget()
        if target then
            local predictedPosition = predictPos(target)
            aim(predictedPosition)
        end
    end
    if ESPPlayerEnabled then
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character then
                AddESPForPlayer(player)
            end
        end
    end
    if ESPZombyEnabled then
        for _, enemy in pairs(workspace:GetDescendants()) do
            if isNPC(enemy) then
                AddESPForEnemy(enemy)
            end
        end
    end
end)

RunService.Stepped:Connect(function()
    if noClipEnabled then
        applyNoClip()
    end
    if escapeNoClipEnabled then
        applyEscapeNoClip()
    end
end)

UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == aimbotKey then
        aimbotEnabled = true
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == aimbotKey then
        aimbotEnabled = false
    end
end)

-- NPC Lock GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "NPC_Lock_GUI"
screenGui.Parent = game:GetService("CoreGui")

local button = Instance.new("TextButton")
button.Name = "NPC_Lock"
button.Size = UDim2.new(0, 150, 0, 50)
button.Position = UDim2.new(0.5, -75, 0.9, -25)
button.BackgroundColor3 = Color3.new(0, 0, 0)
button.TextColor3 = Color3.new(1, 0, 0)
button.Text = "Aimlock: OFF"
button.Font = Enum.Font.Fantasy
button.TextScaled = true
button.Parent = screenGui

local uicorner = Instance.new("UICorner")
uicorner.CornerRadius = UDim.new(0, 12)
uicorner.Parent = button

local dragging, dragInput, dragStart, startPos

button.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = button.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

button.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        local delta = input.Position - dragStart
        button.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

local npcLock = false
local toggleLoop

local function getClosestNPC()
    local closestNPC = nil
    local closestDistance = math.huge
    local char = LocalPlayer.Character
    if not char or not char:FindFirstChild("HumanoidRootPart") then return end

    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("Model") and obj:FindFirstChild("Humanoid") and obj:FindFirstChild("HumanoidRootPart") and obj.Name ~= "Horse" then
            local humanoid = obj.Humanoid
            if humanoid.Health > 0 and not Players:GetPlayerFromCharacter(obj) then
                local distance = (obj.HumanoidRootPart.Position - char.HumanoidRootPart.Position).Magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    closestNPC = obj
                end
            end
        end
    end
    return closestNPC
end

local function toggleNPC()
    npcLock = not npcLock
    if npcLock then
        button.Text = "Aimlock: ON"
        button.TextColor3 = Color3.new(0, 1, 0)
        toggleLoop = RunService.RenderStepped:Connect(function()
            local npc = getClosestNPC()
            if npc and npc:FindFirstChild("Humanoid") then
                local npcHumanoid = npc.Humanoid
                if npcHumanoid.Health > 0 then
                    Cam.CameraSubject = npcHumanoid
                else
                    StarterGui:SetCore("SendNotification", {
                        Title = "Đã tiêu diệt NPC",
                        Text = npc.Name,
                        Duration = 0.4
                    })
                    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                        Cam.CameraSubject = LocalPlayer.Character.Humanoid
                    end
                end
            else
                if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                    Cam.CameraSubject = LocalPlayer.Character.Humanoid
                end
            end
        end)
    else
        button.Text = "Aimlock: OFF"
        button.TextColor3 = Color3.new(1, 0, 0)
        if toggleLoop then
            toggleLoop:Disconnect()
            toggleLoop = nil
        end
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            Cam.CameraSubject = LocalPlayer.Character.Humanoid
        end
    end
    Rayfield:Notify({
        Title = "Aimlock",
        Content = npcLock and "Đã bật" or "Đã tắt",
        Duration = 2
    })
end

button.MouseButton1Click:Connect(toggleNPC)

-- Aimbot Tab
AimbotTab:CreateToggle({
    Name = "Hiển Thị Nút Aimlock",
    CurrentValue = true,
    Callback = function(Value)
        button.Visible = Value
        Rayfield:Notify({
            Title = "Hiển Thị Nút",
            Content = Value and "Đã hiển thị" or "Đã ẩn",
            Duration = 2
        })
    end
})

AimbotTab:CreateToggle({
    Name = "Bật Aimbot",
    CurrentValue = false,
    Callback = function(Value)
        aimbotEnabled = Value
        fovCircle.Visible = Value
        Rayfield:Notify({
            Title = "Ngắm Bắn Tự Động",
            Content = Value and "Đã bật" or "Đã tắt",
            Duration = 2
        })
    end
})

AimbotTab:CreateSlider({
    Name = "Bán Kính Aimbot",
    Range = {50, 500},
    Increment = 10,
    CurrentValue = 100,
    Callback = function(Value)
        fovRadius = Value
        updateFOV()
    end
})

updateFOV()

-- Main Tab
local fuelLabel = MainTab:CreateLabel("Giá trị: Chưa kiểm tra")

local fullBrightEnabled = false
local fullBrightLoop

local function toggleFullBright(state)
    local Lighting = game:GetService("Lighting")
    fullBrightEnabled = state
    if state then
        Lighting.Brightness = 2
        Lighting.ClockTime = 14
        Lighting.FogEnd = 100000
        Lighting.GlobalShadows = false
        Lighting.Ambient = Color3.fromRGB(255, 255, 255)
        if fullBrightLoop then fullBrightLoop:Disconnect() end
        fullBrightLoop = RunService.RenderStepped:Connect(function()
            if fullBrightEnabled then
                Lighting.Brightness = 2
                Lighting.ClockTime = 14
                Lighting.FogEnd = 100000
                Lighting.GlobalShadows = false
                Lighting.Ambient = Color3.fromRGB(255, 255, 255)
            end
        end)
    else
        if fullBrightLoop then
            fullBrightLoop:Disconnect()
            fullBrightLoop = nil
        end
        Lighting.Brightness = 1
        Lighting.FogEnd = 100
        Lighting.GlobalShadows = true
        Lighting.Ambient = Color3.fromRGB(128, 128, 128)
    end
end

MainTab:CreateToggle({
    Name = "Sáng Toàn Phần",
    CurrentValue = false,
    Callback = function(Value)
        toggleFullBright(Value)
        Rayfield:Notify({
            Title = "Sáng Toàn Phần",
            Content = Value and "Đã bật" or "Đã tắt",
            Duration = 2
        })
    end
})

local defaultZoomDistance = 128
MainTab:CreateToggle({
    Name = "Khắc Phục Zoom",
    CurrentValue = false,
    Callback = function(Value)
        LocalPlayer.CameraMaxZoomDistance = Value and 99999 or defaultZoomDistance
        LocalPlayer.CameraMode = Enum.CameraMode.Classic
        Rayfield:Notify({
            Title = "Zoom Màn Hình",
            Content = Value and "Đã bật zoom xa" or "Đã tắt zoom xa",
            Duration = 2
        })
    end
})

local SelectedItemName

MainTab:CreateButton({
    Name = "Kiểm Tra Nhiên Liệu",
    Callback = function()
        if SelectedItemName then
            local item = workspace:FindFirstChild("RuntimeItems") and workspace.RuntimeItems:FindFirstChild(SelectedItemName)
            if item and item:GetAttribute("Fuel") then
                fuelLabel:Set("Giá trị: " .. tostring(item:GetAttribute("Fuel")))
            else
                fuelLabel:Set("Không có nhiên liệu")
            end
        else
            fuelLabel:Set("Chưa chọn vật phẩm")
        end
    end
})

MainTab:CreateButton({
    Name = "Bấm Còi Tàu",
    Callback = function()
        local clickDetector = workspace:FindFirstChild("Train") and workspace.Train:FindFirstChild("TrainControls") and workspace.Train.TrainControls.Lever and workspace.Train.TrainControls.Lever.HitBox:FindFirstChild("ClickDetector")
        if clickDetector then
            clickDetector.ActivationDistance = math.huge
            fireclickdetector(clickDetector)
            Rayfield:Notify({
                Title = "Thành Công",
                Content = "Đã bấm còi tàu!",
                Duration = 2
            })
        else
            Rayfield:Notify({
                Title = "Lỗi",
                Content = "Không tìm thấy còi tàu!",
                Duration = 2
            })
        end
    end
})

MainTab:CreateButton({
    Name = "Đưa Vào Nhiên Liệu",
    Callback = function()
        local item = workspace:FindFirstChild("RuntimeItems") and workspace.RuntimeItems:FindFirstChild(SelectedItemName)
        local fuelDetect = workspace:FindFirstChild("Train") and workspace.Train:FindFirstChild("TrainControls") and workspace.Train.TrainControls:FindFirstChild("FuelDetect")
        if item and item.PrimaryPart and fuelDetect then
            firetouchinterest(item.PrimaryPart, fuelDetect, 0)
            firetouchinterest(item.PrimaryPart, fuelDetect, 1)
            Rayfield:Notify({
                Title = "Thành Công",
                Content = "Đã đưa " .. SelectedItemName .. " vào nhiên liệu!",
                Duration = 2
            })
        else
            Rayfield:Notify({
                Title = "Lỗi",
                Content = "Chọn vật phẩm trước!",
                Duration = 2
            })
        end
    end
})

-- Escape Tab
local ownerUserId = 0 -- del có
local escapeNoClipEnabled = false
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = game:GetService("Players").LocalPlayer

-- Hàm dịch chuyển và hiển thị nút Dừng Cố Định trên màn hình
local function teleportToEnd()
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local hrp = LocalPlayer.Character.HumanoidRootPart
        local targetPosition = Vector3.new(-424.00, 30.00, -49041.00)
        
        -- Dịch chuyển đến vị trí và cố định
        hrp.CFrame = CFrame.new(targetPosition)
        hrp.Anchored = true
        
        Rayfield:Notify({
            Title = "Dịch Chuyển",
            Content = "Đã dịch chuyển đến cầu và cố định! Nhấn 'Dừng Cố Định' trên màn hình để thả.",
            Duration = 4
        })
        
        -- Tạo ScreenGui và nút Dừng Cố Định
        local screenGui = Instance.new("ScreenGui")
        screenGui.Name = "StopAnchorGUI"
        screenGui.Parent = game:GetService("CoreGui")
        
        local stopButton = Instance.new("TextButton")
        stopButton.Name = "StopAnchorButton"
        stopButton.Size = UDim2.new(0, 150, 0, 50)
        stopButton.Position = UDim2.new(0.5, -75, 0.6, -25) -- Giữa màn hình, hơi thấp xuống
        stopButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Màu đỏ
        stopButton.TextColor3 = Color3.fromRGB(255, 255, 255) -- Chữ trắng
        stopButton.Text = "Dừng Cố Định"
        stopButton.Font = Enum.Font.SourceSansBold
        stopButton.TextSize = 20
        stopButton.Parent = screenGui
        
        -- Thêm góc bo tròn
        local uiCorner = Instance.new("UICorner")
        uiCorner.CornerRadius = UDim.new(0, 10)
        uiCorner.Parent = stopButton
        
        -- Sự kiện nhấn nút Dừng Cố Định
        stopButton.MouseButton1Click:Connect(function()
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                LocalPlayer.Character.HumanoidRootPart.Anchored = false
                Rayfield:Notify({
                    Title = "Dịch Chuyển",
                    Content = "Đã thả tự do!",
                    Duration = 2
                })
                screenGui:Destroy() -- Xóa ScreenGui và nút
            end
        end)
        
        -- Hỗ trợ kéo thả nút
        local dragging, dragInput, dragStart, startPos
        stopButton.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = true
                dragStart = input.Position
                startPos = stopButton.Position
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragging = false
                    end
                end)
            end
        end)
        
        stopButton.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                dragInput = input
            end
        end)
        
        UserInputService.InputChanged:Connect(function(input)
            if dragging and input == dragInput then
                local delta = input.Position - dragStart
                stopButton.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            end
        end)
        
        -- Kiểm tra input để thả khi di chuyển hoặc nhảy (chỉ cho PC)
        local connection
        connection = UserInputService.InputBegan:Connect(function(input)
            local key = input.KeyCode
            if key == Enum.KeyCode.W or key == Enum.KeyCode.A or key == Enum.KeyCode.S or 
               key == Enum.KeyCode.D or key == Enum.KeyCode.Space then
                if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    LocalPlayer.Character.HumanoidRootPart.Anchored = false
                    Rayfield:Notify({
                        Title = "Dịch Chuyển",
                        Content = "Đã thả tự do!",
                        Duration = 2
                    })
                    screenGui:Destroy() -- Xóa ScreenGui và nút khi thả bằng phím
                    connection:Disconnect() -- Ngắt kết nối
                end
            end
        end)
    else
        Rayfield:Notify({
            Title = "Lỗi",
            Content = "Không tìm thấy nhân vật!",
            Duration = 2
        })
    end
end

-- Thay Toggle bằng Button trong Tab Escape
EscapeTab:CreateButton({
    Name = "Dịch Chuyển Đến Cầu",
    Callback = function()
        teleportToEnd()
    end
})

-- Giữ nguyên vòng lặp Stepped để xử lý NoClip (nếu có)
RunService.Stepped:Connect(function()
    if escapeNoClipEnabled then
        applyEscapeNoClip()
    end
    if noClipEnabled then
        applyNoClip()
    end
end)

EscapeTab:CreateToggle({
    Name = "Xuyên Tường",
    CurrentValue = false,
    Callback = function(Value)
        noClipEnabled = Value
    end
})

local function taoGiaoDienDemGio()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

    local khungDemGio = Instance.new("Frame")
    khungDemGio.Parent = screenGui
    khungDemGio.Size = UDim2.new(0, 220, 0, 60)
    khungDemGio.Position = UDim2.new(0.5, -110, 0, 10)
    khungDemGio.AnchorPoint = Vector2.new(0.5, 0)
    khungDemGio.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    khungDemGio.BorderSizePixel = 2
    khungDemGio.BorderColor3 = Color3.fromRGB(0, 85, 255)

    local gocTron = Instance.new("UICorner")
    gocTron.CornerRadius = UDim.new(0, 12)
    gocTron.Parent = khungDemGio

    local nhanDemGio = Instance.new("TextLabel")
    nhanDemGio.Parent = khungDemGio
    nhanDemGio.Size = UDim2.new(1, 0, 1, 0)
    nhanDemGio.Text = "10:00"
    nhanDemGio.TextColor3 = Color3.fromRGB(0, 85, 255)
    nhanDemGio.Font = Enum.Font.GothamBlack
    nhanDemGio.TextSize = 32
    nhanDemGio.BackgroundTransparency = 1

    local dragging, dragInput, dragStart, startPos
    khungDemGio.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = khungDemGio.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    khungDemGio.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and input == dragInput then
            local delta = input.Position - dragStart
            khungDemGio.Position = UDim2.new(
                startPos.X.Scale, startPos.X.Offset + delta.X,
                startPos.Y.Scale, startPos.Y.Offset + delta.Y
            )
        end
    end)

    return nhanDemGio
end

local nhanDemGio = taoGiaoDienDemGio()

local function batDauDemGio(thoiGian)
    local thoiGianKetThuc = tick() + thoiGian
    spawn(function()
        while tick() < thoiGianKetThuc do
            local conLai = thoiGianKetThuc - tick()
            nhanDemGio.Text = string.format("%02d:%02d", math.floor(conLai / 60), math.floor(conLai % 60))
            task.wait(0.1)
        end
        nhanDemGio.Text = "00:00"
    end)
end

batDauDemGio(600)

Players.PlayerChatted:Connect(function(thongTinChat)
    if thongTinChat.SpeakerUserId == ownerUserId and thongTinChat.Message:lower() == "!dance" then
        for _, plr in pairs(Players:GetPlayers()) do
            if plr.Character and plr:FindFirstChild("Humanoid") then
                ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/e dance", "All")
                sendNotification("Đang Nhảy", plr.Name .. " đang nhảy!", 5)
            end
        end
    end
end)

-- ESP Tab
ESPTab:CreateToggle({
    Name = "ESP Vật Phẩm và Quái",
    CurrentValue = false,
    Callback = function(Value)
        ESPEnabled = Value
        if Value then
            UpdateESP()
            spawn(function()
                while ESPEnabled do
                    UpdateESP()
                    task.wait(1)
                end
            end)
        else
            ClearESP()
        end
        Rayfield:Notify({
            Title = "ESP",
            Content = Value and "Đã bật" or "Đã tắt",
            Duration = 2
        })
    end
})

ESPTab:CreateToggle({
    Name = "ESP Người Chơi",
    CurrentValue = false,
    Callback = function(Value)
        ESPPlayerEnabled = Value
    end
})

ESPTab:CreateToggle({
    Name = "ESP Zombie",
    CurrentValue = false,
    Callback = function(Value)
        ESPZombyEnabled = Value
    end
})

-- Movement Tab
MovementTab:CreateToggle({
    Name = "Kill Aura",
    CurrentValue = false,
    Callback = function(Value)
        auraOn = Value
        if Value then spawn(killAuraLoop) end
        Rayfield:Notify({
            Title = "Kill Aura",
            Content = Value and "Đã bật" or "Đã tắt",
            Duration = 2
        })
    end
})

MovementTab:CreateSlider({
    Name = "Phạm Vi Kill Aura",
    Range = {5, 50},
    Increment = 1,
    CurrentValue = 15,
    Callback = function(Value)
        killDist = Value
    end
})

MovementTab:CreateToggle({
    Name = "Xuyên Tường",
    CurrentValue = false,
    Callback = function(Value)
        noClipEnabled = Value
    end
})
